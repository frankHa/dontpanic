#ifndef LIBDONTPANICTASK_HPP
#define LIBDONTPANICTASK_HPP
// ---------------------------------------------------------------------------------
#include "defines.hpp"
#include <libdontpanic/uuid.h>
#include <QString>
#include <QDateTime>
// ---------------------------------------------------------------------------------
class QDBusArgument;
// ---------------------------------------------------------------------------------
namespace dp
{
// ---------------------------------------------------------------------------------
class DP_EXPORT Task
{
    // ---------------------------------------------------------------------------------
    friend QDBusArgument const& operator >> ( QDBusArgument const&arg, dp::Task & task );
    // ---------------------------------------------------------------------------------
public:
    // ---------------------------------------------------------------------------------
    TYPE ( Task );
    // ---------------------------------------------------------------------------------
    ///ctor
    Task();
    // ---------------------------------------------------------------------------------
    Task ( QString const& name );
    // ---------------------------------------------------------------------------------
    Task ( Uuid const& id );
    // ---------------------------------------------------------------------------------
public:
    // ---------------------------------------------------------------------------------
    Uuid const& id() const;
    // ---------------------------------------------------------------------------------
    QString const& name() const;
    // ---------------------------------------------------------------------------------
    Task& setName ( QString name );
    // ---------------------------------------------------------------------------------
    bool isSoloEffort() const;
    // ---------------------------------------------------------------------------------
    Task& setIsSoloEffort ( bool s );
    // ---------------------------------------------------------------------------------
    bool isChargeable() const;
    // ---------------------------------------------------------------------------------
    Task& setIsChargeable ( bool c );
    // ---------------------------------------------------------------------------------
    QDateTime const& creationDate() const;
    // ---------------------------------------------------------------------------------
    Task& setCreationDate ( QDateTime date );
    // ---------------------------------------------------------------------------------
    bool isVisible() const;
    // ---------------------------------------------------------------------------------
    Task& setVisible ( bool v );
    // ---------------------------------------------------------------------------------
    QString comment() const;
    // ---------------------------------------------------------------------------------
    Task& setComment ( QString comment );
    // ---------------------------------------------------------------------------------
    bool isValid() const;
    // ---------------------------------------------------------------------------------
private:
    // ---------------------------------------------------------------------------------
    Uuid  _M_id;
    // ---------------------------------------------------------------------------------
    QString _M_name;
    // ---------------------------------------------------------------------------------
    bool _M_solo_effort;
    // ---------------------------------------------------------------------------------
    bool _M_chargeable;
    // ---------------------------------------------------------------------------------
    QDateTime _M_creation_date;
    // ---------------------------------------------------------------------------------
    bool _M_visible;
    // ---------------------------------------------------------------------------------
    QString _M_comment;
    // ---------------------------------------------------------------------------------
    //TODO? Modification date
    // ---------------------------------------------------------------------------------
};
typedef QList<Task> TaskList;
// ---------------------------------------------------------------------------------
DECLARE_SMARTPOINTERS ( Task );
// ---------------------------------------------------------------------------------
class DP_EXPORT NullTask: public Task
{
public:
    // ---------------------------------------------------------------------------------
    NullTask() : Task ( Uuid() ) {}
    // ---------------------------------------------------------------------------------
};
// ---------------------------------------------------------------------------------
bool DP_EXPORT operator == ( dp::Task const& lhs, dp::Task const& rhs );
// ---------------------------------------------------------------------------------
template<typename ostream>
ostream & operator<< ( ostream &out, dp::Task const& t )
{
    out<<"Task: "<<t.id().toString() <<", name: "<<t.name();
    return out;
}
// ---------------------------------------------------------------------------------
}//dp
// ---------------------------------------------------------------------------------
#endif //LIBDONTPANICTASK_HPP

// kate: indent-mode cstyle; space-indent on; indent-width 4; 
