#ifndef DP_SQLITE_HPP
#define DP_SQLITE_HPP
//dp includes
#include "libdontpanic/defines.hpp"
// ---------------------------------------------------------------------------------
namespace dp
{
  // ---------------------------------------------------------------------------------
  //forward decl:
  FORWARD_DECL ( Action );
  class Project;
  typedef QList<Project> ProjectList;
  class Task;
  typedef QList<Task> TaskList;
  // ---------------------------------------------------------------------------------
  namespace _persistence
  {
    // ---------------------------------------------------------------------------------
    class Sqlite
    {
        // ---------------------------------------------------------------------------------
      public:
        // ---------------------------------------------------------------------------------
        Sqlite();
        // ---------------------------------------------------------------------------------
      public:
        // ---------------------------------------------------------------------------------
        success open_database_connection() const;
        // ---------------------------------------------------------------------------------
        success update_database_schema_if_necessary() const;
        // ---------------------------------------------------------------------------------
      public:
        // ---------------------------------------------------------------------------------
        success persist ( Project const&_project ) const;
	// ---------------------------------------------------------------------------------
	success remove (Project const& _project)const;
	// ---------------------------------------------------------------------------------
	success findAll(ProjectList &_pl)const;
        // ---------------------------------------------------------------------------------
        success persist ( Task const&_t )const;	
        // ---------------------------------------------------------------------------------
	success remove (Task const& _t)const;
	// ---------------------------------------------------------------------------------
	success findAll(TaskList &_tl)const;
        // ---------------------------------------------------------------------------------
        success persist ( Action const&_a )const;
        // ---------------------------------------------------------------------------------
        Action_ptr activeAction()const;
        // ---------------------------------------------------------------------------------
    };
    // ---------------------------------------------------------------------------------
    inline Sqlite sqlite()
    {
      return Sqlite();
    }
    // ---------------------------------------------------------------------------------
  }//_persistance
  // ---------------------------------------------------------------------------------
}//dp
// ---------------------------------------------------------------------------------
#endif //DP_SQLITE_HPP
